/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LarryAirdrop,
  LarryAirdropInterface,
} from "../../contracts/LarryAirdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_larryToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AirdropProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensRecovered",
    type: "event",
  },
  {
    inputs: [],
    name: "AIRDROP_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
    ],
    name: "airdropTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "larryToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "recoverTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161093f38038061093f83398101604081905261002f916100d4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610084565b50600180546001600160a01b0319166001600160a01b0392909216919091179055610104565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e657600080fd5b81516001600160a01b03811681146100fd57600080fd5b9392505050565b61082c806101136000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100d05780638da5cb5b146100d8578063cd2f0574146100fd578063f2fde38b1461011057600080fd5b806316114acd146100825780632b5b6872146100975780634ee51a27146100bd575b600080fd5b61009561009036600461066e565b610123565b005b6100aa6b033b2e3c9fd0803ce800000081565b6040519081526020015b60405180910390f35b6100956100cb366004610690565b6102c1565b610095610583565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100b4565b6001546100e5906001600160a01b031681565b61009561011e36600461066e565b610597565b61012b6105d5565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610174573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101989190610705565b9050600081116101e65760405162461bcd60e51b81526020600482015260146024820152732737903a37b5b2b739903a37903932b1b7bb32b960611b60448201526064015b60405180910390fd5b816001600160a01b031663a9059cbb6102076000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610254573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610278919061071e565b50604080516001600160a01b0385168152602081018390527f46d2e6e71fc567877b817ff3d940571f989d4ee4d40f2b70806d36e738feef6f91015b60405180910390a1505050565b6102c96105d5565b61012c81111561031b5760405162461bcd60e51b815260206004820152601c60248201527f4d61782033303020726563697069656e7473207065722062617463680000000060448201526064016101dd565b6000610333826b033b2e3c9fd0803ce8000000610756565b6001546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a49190610705565b10156103f25760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e636500000000000060448201526064016101dd565b60005b8281101561054357600084848381811061041157610411610773565b9050602002016020810190610426919061066e565b6001600160a01b03160361047c5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e7420616464726573730000000000000060448201526064016101dd565b6001546001600160a01b031663a9059cbb85858481811061049f5761049f610773565b90506020020160208101906104b4919061066e565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526b033b2e3c9fd0803ce800000060248201526044016020604051808303816000875af115801561050c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610530919061071e565b508061053b81610789565b9150506103f5565b507f1395a8a2004b49ed0281335664c151f207373d62cd10f1c627d3305b5ac39e9183836b033b2e3c9fd0803ce80000006040516102b4939291906107a2565b61058b6105d5565b6105956000610602565b565b61059f6105d5565b6001600160a01b0381166105c957604051631e4fbdf760e01b8152600060048201526024016101dd565b6105d281610602565b50565b6000546001600160a01b031633146105955760405163118cdaa760e01b81523360048201526024016101dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461066957600080fd5b919050565b60006020828403121561068057600080fd5b61068982610652565b9392505050565b600080602083850312156106a357600080fd5b823567ffffffffffffffff808211156106bb57600080fd5b818501915085601f8301126106cf57600080fd5b8135818111156106de57600080fd5b8660208260051b85010111156106f357600080fd5b60209290920196919550909350505050565b60006020828403121561071757600080fd5b5051919050565b60006020828403121561073057600080fd5b8151801515811461068957600080fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761076d5761076d610740565b92915050565b634e487b7160e01b600052603260045260246000fd5b60006001820161079b5761079b610740565b5060010190565b6040808252810183905260008460608301825b868110156107e3576001600160a01b036107ce84610652565b168252602092830192909101906001016107b5565b506020939093019390935250939250505056fea2646970667358221220176929af7ce9dd769a5e9da29629218b311f802c052e4261652b66bfae8bd7ec64736f6c63430008140033";

type LarryAirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LarryAirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LarryAirdrop__factory extends ContractFactory {
  constructor(...args: LarryAirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _larryToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_larryToken, overrides || {});
  }
  override deploy(
    _larryToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_larryToken, overrides || {}) as Promise<
      LarryAirdrop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LarryAirdrop__factory {
    return super.connect(runner) as LarryAirdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LarryAirdropInterface {
    return new Interface(_abi) as LarryAirdropInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LarryAirdrop {
    return new Contract(address, _abi, runner) as unknown as LarryAirdrop;
  }
}
